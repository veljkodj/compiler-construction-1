// generated with ast extension for cup
// version 0.8
// 7/10/2020 17:1:49


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ReturnType ReturnType);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(Assignop Assignop);
    public void visit(CondTermList CondTermList);
    public void visit(MethodStatementList MethodStatementList);
    public void visit(PrintOptional PrintOptional);
    public void visit(OptionalClassMethodDeclList OptionalClassMethodDeclList);
    public void visit(Factor Factor);
    public void visit(NonMethodDeclList NonMethodDeclList);
    public void visit(CondTerm CondTerm);
    public void visit(FirstTerm FirstTerm);
    public void visit(ConstList ConstList);
    public void visit(AddopLeft AddopLeft);
    public void visit(Designator Designator);
    public void visit(ClassVarDeclList ClassVarDeclList);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(OptionalAbstractClassMethodDeclList OptionalAbstractClassMethodDeclList);
    public void visit(StmtList StmtList);
    public void visit(AddopRight AddopRight);
    public void visit(VarDeclListPart VarDeclListPart);
    public void visit(ElseStatement ElseStatement);
    public void visit(ExprList ExprList);
    public void visit(VarDeclList VarDeclList);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(AbstractClassMethodDeclPart AbstractClassMethodDeclPart);
    public void visit(MulopLeft MulopLeft);
    public void visit(NonMethodDeclListPart NonMethodDeclListPart);
    public void visit(CondFact CondFact);
    public void visit(FormPar FormPar);
    public void visit(TermListExt TermListExt);
    public void visit(MethodVarDeclList MethodVarDeclList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MulopRight MulopRight);
    public void visit(AbstractClassMethodDeclList AbstractClassMethodDeclList);
    public void visit(ConstType ConstType);
    public void visit(ForDesignStmt ForDesignStmt);
    public void visit(ForCond ForCond);
    public void visit(FormPars FormPars);
    public void visit(OptionalExtend OptionalExtend);
    public void visit(MulopRightMod MulopRightMod);
    public void visit(MulopRightDiv MulopRightDiv);
    public void visit(MulopRightMul MulopRightMul);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopRightMinus AddopRightMinus);
    public void visit(AddopRightPlus AddopRightPlus);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(AssignmentMul AssignmentMul);
    public void visit(AssignmentAdd AssignmentAdd);
    public void visit(Assignment Assignment);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorNotElement DesignatorNotElement);
    public void visit(DesignatorElement DesignatorElement);
    public void visit(FactorExpression FactorExpression);
    public void visit(FactorNewObject FactorNewObject);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorBoolean FactorBoolean);
    public void visit(FactorCharacter FactorCharacter);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorDesignatorFunction FactorDesignatorFunction);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermMember TermMember);
    public void visit(TermRecursive TermRecursive);
    public void visit(MinusFirstTerm MinusFirstTerm);
    public void visit(NoMinusFirstTerm NoMinusFirstTerm);
    public void visit(TermListMember TermListMember);
    public void visit(TermListRecursive TermListRecursive);
    public void visit(TermListExtMember TermListExtMember);
    public void visit(TermListExtRecursive TermListExtRecursive);
    public void visit(Expr Expr);
    public void visit(Lesse Lesse);
    public void visit(Less Less);
    public void visit(Grte Grte);
    public void visit(Grt Grt);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(CondFactNoRelationalExpression CondFactNoRelationalExpression);
    public void visit(CondFactRelationalExpression CondFactRelationalExpression);
    public void visit(CondFactorsMember CondFactorsMember);
    public void visit(CondFactors CondFactors);
    public void visit(CondTermsMember CondTermsMember);
    public void visit(CondTerms CondTerms);
    public void visit(Condition Condition);
    public void visit(ExpressionsMember ExpressionsMember);
    public void visit(Expressions Expressions);
    public void visit(ActPars ActPars);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParams ActualParams);
    public void visit(ErrorDesignatorAssignExpression ErrorDesignatorAssignExpression);
    public void visit(DesignatorAssignExpression DesignatorAssignExpression);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorPars DesignatorPars);
    public void visit(DesignatorAssignment DesignatorAssignment);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementList StatementList);
    public void visit(NoPrintOption NoPrintOption);
    public void visit(PrintOption PrintOption);
    public void visit(ErrorForCondition ErrorForCondition);
    public void visit(NoForCondition NoForCondition);
    public void visit(ForCondition ForCondition);
    public void visit(NoForDesignatorStatement NoForDesignatorStatement);
    public void visit(ForDesignatorStatement ForDesignatorStatement);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(MatchedIf MatchedIf);
    public void visit(ForLoopEmpty ForLoopEmpty);
    public void visit(Statements Statements);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatementNoExpr ReturnStatementNoExpr);
    public void visit(ReturnStatementExpr ReturnStatementExpr);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(ForLoop ForLoop);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(Type Type);
    public void visit(FormalParamArr FormalParamArr);
    public void visit(FormalParamVar FormalParamVar);
    public void visit(NoMethodStatements NoMethodStatements);
    public void visit(MethodStatements MethodStatements);
    public void visit(NoMethodVarDeclarationList NoMethodVarDeclarationList);
    public void visit(MethodVarDeclarationList MethodVarDeclarationList);
    public void visit(FormalParamsMember FormalParamsMember);
    public void visit(FormalParams FormalParams);
    public void visit(ErrorFormalParamList ErrorFormalParamList);
    public void visit(NoFormalParamList NoFormalParamList);
    public void visit(FormalParamList FormalParamList);
    public void visit(AbstractMethodDecl AbstractMethodDecl);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnNonVoid ReturnNonVoid);
    public void visit(MethodDeclName MethodDeclName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclarationList NoMethodDeclarationList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(AbstractClassMethodDeclPartAbstractMethod AbstractClassMethodDeclPartAbstractMethod);
    public void visit(AbstractClassMethodDeclPartMethod AbstractClassMethodDeclPartMethod);
    public void visit(NoAbstractClassMethodDeclarations NoAbstractClassMethodDeclarations);
    public void visit(AbstractClassMethodDeclarations AbstractClassMethodDeclarations);
    public void visit(NoAbstractClassMethodDeclListDefinition NoAbstractClassMethodDeclListDefinition);
    public void visit(AbstractClassMethodDeclListDefinition AbstractClassMethodDeclListDefinition);
    public void visit(AbstractClassName AbstractClassName);
    public void visit(AbstractClassDecl AbstractClassDecl);
    public void visit(NoClassMethodDeclListDefinition NoClassMethodDeclListDefinition);
    public void visit(ClassMethodDeclListDefinition ClassMethodDeclListDefinition);
    public void visit(NoClassVarDeclarationList NoClassVarDeclarationList);
    public void visit(ClassVarDeclarationList ClassVarDeclarationList);
    public void visit(NoExtend NoExtend);
    public void visit(Extend Extend);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarArray VarArray);
    public void visit(Var Var);
    public void visit(VarDeclarationsMember VarDeclarationsMember);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ErrorVarDeclaration ErrorVarDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstNumber ConstNumber);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstListPart ConstListPart);
    public void visit(ConstantsMember ConstantsMember);
    public void visit(Constants Constants);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDeclPart ClassDeclPart);
    public void visit(AbstractClassDeclPart AbstractClassDeclPart);
    public void visit(VarDeclPart VarDeclPart);
    public void visit(ConstDeclPart ConstDeclPart);
    public void visit(NoNonMethodDeclarationList NoNonMethodDeclarationList);
    public void visit(NonMethodDeclarationList NonMethodDeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
